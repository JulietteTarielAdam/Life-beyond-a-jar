{
  "hash": "929f47e41225b2984e2eb5cfa953feab",
  "result": {
    "markdown": "---\ntitle: \"Analysis Hovering\"\ndate: \"2024-04-23\"\nauthor: \"Juliette Tariel-Adam\"\nformat: \n   html:\n    embed-resources: true\n    self-contained-math: true\neditor_options: \n  chunk_output_type: console\nknitr:\n  opts_chunk:\n    fig-align: center\n    out-width: \"100%\"\n---\n\n\n\n\nTo analyse the amount of time the fish was hovering on the 204 trials with hovering time > 0, we tried:\n\n+ glm with poisson or zero-inflated poisson distribution, but the fit was not good.\n+ a transformation log(hovering +1), see below, but only a log(hovering+103) was good enough to achieve normal distribution. But there was a huge problem in hetereogeneity of variance with this model. \n+ a linear model on the remaining 204 trials during which hovering happened. But the variance of residuals was increasing with the fitted hovering time values.\n+  a linear model with weighted least squares to stabilise the variance accross the fitted values. The normality was not great but ANOVA are robust to the assumption of normality. It is the model we chose. We had to use the nlme package for this but it does not allow for rank deficient models.\n+ We tried to implement weighted least squares with the lmer package with no success. \n\n::: {.panel-tabset}\n\n# Poisson distribution\n\nY variable = amount of time spent hovering during a trial, rounded to be an integer in seconds\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# poisson on all hovering data\nmHovering <- glmmTMB(round(Hovering,0) ~ Tank + Time + Filter + (1|Fish), data = data, family =poisson)\nmHovering_res <- simulateResiduals(mHovering)\nplot(mHovering_res)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n# zero inflated poisson on all hovering data\nmHovering <- glmmTMB(round(Hovering,0) ~ Tank + Time + Filter + (1|Fish), data = data, family =poisson,ziformula=~1)\nmHovering_res <- simulateResiduals(mHovering)\nplot(mHovering_res)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-2-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n# poisson on positive hovering data\nmHovering <- glmmTMB(round(Hovering,0) ~ Tank + Time + Filter + (1|Fish), data = data[data$Hovering >0,], family =poisson)\nmHovering_res <- simulateResiduals(mHovering)\nplot(mHovering_res)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-2-3.png){fig-align='center' width=100%}\n:::\n:::\n\n\nFit are not good\n\n# Attempt transformation log(Y + 1)\n\nY variable = amount of time spent hovering during a trial. \n\nOnly considering positive hovering data Y > 0 \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 1)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 5)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 10)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-3.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 15)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-4.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 20)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-5.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 25)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-6.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 30)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-7.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 50)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-8.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log(Hovering + 70)))+\n  geom_histogram(bins = 15, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-9.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nggplot(data, aes(x = log10(Hovering + 103)))+\n  geom_histogram(bins = 10, fill = grey(0.75), color=\"black\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-10.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nmHovering <- lmer(log(Hovering+103)~Tank + Time + Filter + (1|Fish), data = data)\ncheck_model(mHovering, check = \"normality\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-11.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\ncheck_model(mHovering, check = \"homogeneity\")\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-3-12.png){fig-align='center' width=100%}\n:::\n:::\n\n\nWe had to go all the way to log(y + 103) which is not a problem per se, because the value to add depends on the scale of the variable. Hovering varies between 0 and 600. \n\nBut anyway the fit is not good with an increase of variance in residuals with fitted values.\n\n# Linear model\n\nY variable = amount of time spent hovering during a trial. \n\nOnly considering positive hovering data Y > 0 \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmHovering <- lmer(Hovering ~ Tank + Time + Filter + (1|Fish), data = data2)\nlm_diagnosis(mHovering)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"check constant variance over fitted values\"\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-2.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Normality of Hovering\"\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-3.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Normality random residuals\"\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-4.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-5.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nplotResiduals(mHovering, form =  data2$Tank)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-4-6.png){fig-align='center' width=100%}\n:::\n:::\n\n\nProblem homogeneity of variance, increase of residual variance with fitted values. \n\n# Linear model with WLS\n\nIn Weighted Least Squares (WLS, each observation is given a weight inversely proportional to its variance, helping to stabilize the variance across the fitted values.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmHovering <- lme(Hovering ~ Tank + Time + Filter, random = ~1 | Fish, data = data2, weights = varPower(), control = lmeControl(maxIter = 20000))\nplot(mHovering, resid(., type = \"pearson\") ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nqqnorm(resid(mHovering, type = \"pearson\"))\nqqline(resid(mHovering, type = \"pearson\"))\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nranefPlot <- ranef(mHovering, level = 1)\nqqnorm(ranefPlot$`(Intercept)`)\nqqline(ranefPlot$`(Intercept)`)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-5-3.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nboxplot(resid(mHovering, type = \"pearson\")~ Tank, data =  data2)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-5-4.png){fig-align='center' width=100%}\n:::\n:::\n\n\nThe normality is not great but ANOVA are robust to the assumption of normality.\n\nHowever, the model is not working when including Order. The nlme package does not handle rank-deficient models. The lmer does not handle increasing error variance with fitted values automatically. Below I tried to implement increasing error variance with fitted values using lmer package.\n\n# Ajusted weigthts lmer\n\n::: {.panel-tabset}\n\n## Weights based on residual variance\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmHovering <- lmer(Hovering ~ Tank + Time + Filter + Order + (1 | Fish), data = data2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfixed-effect model matrix is rank deficient so dropping 1 column / coefficient\n```\n:::\n\n```{.r .cell-code}\nanova(mHovering, ddf = \"Kenward-Roger\", type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType II Analysis of Variance Table with Kenward-Roger's method\n       Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    \nTank    91550 22887.5     4 186.16 12.5389 4.715e-09 ***\nTime    10552  3517.2     3 180.56  1.9272    0.1268    \nFilter   4506  4505.8     1 137.88  2.4688    0.1184    \nOrder   15931  5310.2     3 184.03  2.9095    0.0359 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\n# calculating weights\nweights_hovering <- data.frame(abs.res = abs(residuals(mHovering)),\n                               fit.values = fitted(mHovering))\nggplot(data = weights_hovering , aes(y = abs.res, x = fit.values)) +\n  geom_point()+\n  geom_smooth(method = \"loess\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nvar_model <- lm(abs.res ~ fit.values + I(fit.values^2), data = weights_hovering)\nvar_model2 <- lm(abs.res ~ fit.values, data = weights_hovering)\nAIC(var_model, var_model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           df      AIC\nvar_model   4 1855.309\nvar_model2  3 1859.412\n```\n:::\n\n```{.r .cell-code}\n# A quadratic relationship seems more appropriate to predict the residuals from the fitted values\nweights_hovering$var <- predict(var_model)^2\n# Calculate weights as the inverse of the variance estimate\nweights_hovering$weights <- 1 / weights_hovering$var\n# The higher the variance, the less weight.\n# So less weight/importance given to high fitted values because they are less reliable = they have a strong error associated to them\nmHovering2 <- lmer(Hovering ~ Tank + Time + Filter + Order + (1 | Fish), data = data2, \n                  weights = weights_hovering$weights)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfixed-effect model matrix is rank deficient so dropping 1 column / coefficient\n```\n:::\n\n```{.r .cell-code}\nplot(mHovering2, resid(., type = \"pearson\") ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-6-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nplot(mHovering2, abs(resid(., type = \"pearson\")) ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-6-3.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nanova(mHovering2, ddf = \"Kenward-Roger\", type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType II Analysis of Variance Table with Kenward-Roger's method\n         Sum Sq Mean Sq NumDF   DenDF F value  Pr(>F)  \nTank   -27.6017 -6.9004     4  7.7532 -4.6262 1.00000  \nTime    10.2470  3.4157     3 17.9996  2.3768 0.10384  \nFilter   4.5799  4.5799     1 20.8723  3.1916 0.08856 .\nOrder   12.0989  4.0330     3 16.5362  2.8028 0.07216 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nIt worked: No more increasing variance with fitted values. But negative SumSq values for Tank, how is it possible?  \n\n2nd trial with bigger weights\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nweights_hovering$SE <- predict(var_model)\nweights_hovering$weights2 <- 1 / weights_hovering$SE\nmHovering3 <- lmer(Hovering ~ Tank + Time + Filter + Order + (1 | Fish), data = data2, \n                  weights = weights_hovering$weights2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfixed-effect model matrix is rank deficient so dropping 1 column / coefficient\n```\n:::\n\n```{.r .cell-code}\nplot(mHovering3, abs(resid(., type = \"pearson\")) ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nanova(mHovering3, ddf = \"Kenward-Roger\", type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType II Analysis of Variance Table with Kenward-Roger's method\n       Sum Sq Mean Sq NumDF   DenDF F value    Pr(>F)    \nTank   8620.5 2155.13     4  9.4919 45.5878 3.507e-06 ***\nTime    410.2  136.74     3 11.0439  2.9093   0.08215 .  \nFilter  146.3  146.35     1 16.1805  3.1158   0.09640 .  \nOrder   493.3  164.43     3 11.1074  3.4959   0.05294 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nIf using higher weights, no negative value of SS but it is not fixing the problem of residuals. \n\n## Weights based on group tank\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwith(data2, boxplot(Hovering ~ Tank))\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n(tank.var <- with(data2,\n                       tapply(Hovering,Tank, var)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Jar    Small   Medium    Large   Barren \n5966.313 2078.774 1420.120 1058.654 1965.091 \n```\n:::\n:::\n\n\nTwice more variance for Jar. It sounds logical as it is one of the only group where fish often perform  hovering. Creating the problem in residuals? Adjusting the weights depending on tank\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Creating weights inversely proportional to the estimated variances\nweights <- with(data2, 1 / tank.var[Tank])\nmHovering <- lmer(Hovering ~ Tank + Time + Filter + Order + (1 | Fish), data = data2, weights = weights)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfixed-effect model matrix is rank deficient so dropping 1 column / coefficient\n```\n:::\n\n```{.r .cell-code}\nplot(mHovering, resid(., type = \"pearson\") ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nplot(mHovering, abs(resid(., type = \"pearson\")) ~ fitted(.), aspect = 1, pch = 21, abline = 0)\n```\n\n::: {.cell-output-display}\n![](Analysis_Hovering_files/figure-html/unnamed-chunk-9-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nanova(mHovering, ddf = \"Kenward-Roger\", type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType II Analysis of Variance Table with Kenward-Roger's method\n         Sum Sq Mean Sq NumDF   DenDF F value  Pr(>F)  \nTank   -15.6127 -3.9032     4  8.3071 -5.1931 1.00000  \nTime     7.6980  2.5660     3 16.5943  3.5329 0.03797 *\nFilter   3.0877  3.0877     1 22.8958  4.2512 0.05075 .\nOrder    4.2242  1.4081     3 16.0998  1.9378 0.16395  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nAgain negative Sum of Squares and not fixing the problem in the residual variance\n\n:::\n\n:::",
    "supporting": [
      "Analysis_Hovering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}