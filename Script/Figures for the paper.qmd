---
output: html_document
editor_options: 
  chunk_output_type: console
---
```{r}
#| include: false
# Run the scripts that load the data and that contains the functions to plot and do the linear models
source("Script/Load-data.R")
source("Script/Functions/Plots.R")
source("Script/Functions/Linear-model.R")
library(factoextra)

# change size big red dot
plot_var <- function(data, variable){
  ggplot(data, aes_string(y = variable, x = "Tank")) +
    geom_jitter(alpha = .5, width = 0.1, height=0, color = grey(0.25), size = .8) +
    stat_summary(fun.min = function(x) mean(x) - sd(x), 
                 fun.max = function(x) mean(x) + sd(x), 
                 geom = "errorbar",colour = "red", width = 0.15, alpha =  .75)+
    stat_summary(fun.y = mean,geom = "point", colour = "red", size = 3)
}

# rename Barren
data <- data %>% mutate(Tank = fct_recode(Tank, `Large-Barren` = "Barren"))
levels(data$Tank)
```

# plot PCA
```{r}
pca2 <- data2 %>% 
  mutate(Interation.with.the.walls = Interation.with.surface) %>% 
  dplyr::select(Swimming, Resting, Hovering, Stereotypic.swimming, Nest.building, Foraging,Interation.with.the.walls, Sinking.Floating) %>% 
  PCA(., graph = FALSE, ncp=4, scale.unit = TRUE)

(plotPCA1 <- fviz_pca_var(pca2, arrowsize = 1.2, 
                          labelsize = 5, 
                          habillage = factor(1:8)) +
  scale_colour_manual(values=palette.beh2, guide="none")+
    theme(title = element_blank(),
          axis.title = element_text(size = 12)))

(plotPCA2 <- fviz_pca_var(pca2, arrowsize = 1.2, axes = c(3,4),
                          labelsize = 5, 
                          habillage = factor(1:8)) +
  scale_colour_manual(values=palette.beh2, guide="none")+
    theme(title = element_blank(),
          axis.title = element_text(size = 12)))

(plotPCA <- ggarrange(plotPCA1, plotPCA2))
ggsave(plotPCA, filename = "Plots/PCA.png", width = 10.3, height = 5.75)
```

# plot summary

## Overall summary 

```{r}
theme.new <- theme_classic()+ theme(axis.title.x = element_blank(),
         axis.text.x = element_text(size = 12),
         axis.text.y = element_text(size = 10),
         axis.title.y = element_text(size = 12),
         legend.text = element_text(size = 12))

(plot.tank <- plot1("Tank") + 
   ylab("Time spent doing the behaviour (sec)")+
   scale_fill_manual(values = palette.beh,
                     labels = c("Swimming", "Resting", "Hovering", "Stereotypic swimming", "Nest building", "Foraging", "Interation with the walls"),
                     name = "Behaviour")+
   ggtitle("A. Tank")+
    theme(theme.new))

(plot.time <- plot1("Time") + 
    ylab("Time spent doing the behaviour (sec)")+
   scale_fill_manual(values = palette.beh,
                     labels = c("Swimming", "Resting", "Hovering", "Stereotypic swimming", "Nest building", "Foraging", "Interation with the walls"),
                     name = "Behaviour")+
    ggtitle("B. Time of day")+
    theme(theme.new))

(plot.filter <- plot1("Filter") + 
    ylab("Time spent doing the behaviour (sec)")+
   scale_fill_manual(values = palette.beh,
                     labels = c("Swimming", "Resting", "Hovering", "Stereotypic swimming", "Nest building", "Foraging", "Interation with the walls"),
                     name = "Behaviour")+
    ggtitle("C. Filter")+
    theme(theme.new))

(plot.order <- plot1("Order") + 
   ylab("Time spent doing the behaviour (sec)")+
   scale_fill_manual(values = palette.beh,
                     labels = c("Swimming", "Resting", "Hovering", "Stereotypic swimming", "Nest building", "Foraging", "Interation with the walls"),
                     name = "Behaviour")+
   ggtitle("D. Tank order")+
    theme(theme.new))

(plot.fig1 <- ggarrange(plot.tank,
                    ggarrange(plot.time, plot.filter, legend = "none"),
                    plot.order,
                    common.legend = TRUE, legend = "top", nrow = 3))
ggsave(plot.fig1 , filename = "Plots/Fig1.png",width = 8.11, height = 12.98)
```

## Plot by behaviour

```{r}
(plotA <- plot_var(data, "Swimming") +
   theme(axis.title.x = element_blank(),
         title = element_text(size = 10)) +
   ylab("Time spent swimming (sec)")+
   ggtitle("A. Swimming")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotB <- plot_var(data, "Resting") +
    theme(axis.title.x = element_blank(),
          title = element_text(size = 10)) +
    ylab("Time spent resting (sec)")+
    ggtitle("B. Resting")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotC1 <- plot_var(subset(data, Hovering >0), "Hovering") +
    theme(axis.title.x = element_blank(),
          title = element_text(size = 10)) +
    ylab("Time spent hovering (sec)")+
    ggtitle("C1. Hovering")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotC2 <- plot_var_binary(data, "Hovering.bin") +
    theme(axis.title.x = element_blank(),
          title = element_text(size = 10)) +
    ylab("% of trials with hovering")+
    ylim(0,100)+
    ggtitle("C2. Hovering")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotD <- plot_var_binary(data, "SS.bin") +
    theme(axis.title.x = element_blank(),
          title = element_text(size = 10)) +
    ylab("% of trials with stereo. swim.")+
    ylim(0,100)+
    ggtitle("D. Stereotypic swimming")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotE <- plot_var_binary(data, "Nest.bin") +
    theme(axis.title.x = element_blank(),
          title = element_text(size = 10)) +
    ylab("% of trials with nest building")+
    ylim(0,100)+
    ggtitle("E. Nest building")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotF <- plot_var_binary(data, "Foraging.bin") +
    theme(title = element_text(size = 10)) +
    ylab("% of trials with foraging")+
    ylim(0,100)+
    ggtitle("F. Foraging")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plotG <- plot_var_binary(data, "Interacting.bin") +
    theme(title = element_text(size = 10)) +
    ylab("% of trials with intera. with walls")+
    ylim(0,100)+
    ggtitle("G. Interaction with the walls")+
  scale_x_discrete(labels = c("Jar","Small", "Medium","Large", "Barren")))

(plot2 <- ggarrange(plotA, plotB, plotC1, plotC2, plotD, plotE, plotF, plotG, ncol = 2, nrow = 4))
ggsave(plot2, filename = "Plots/Fig2.png", width = 5.4, height = 10)
```

# plot by individual fish

## Overall ummary

```{r}
(plot.fish1 <-tf(data, grouping = "Fish", beh.cols, colMeans) %>% 
  pivot_longer(cols = beh.cols , names_to ="Behaviour", values_to="time") %>% 
  mutate(Behaviour = fct_relevel(Behaviour, beh.cols),
         group = fct_collapse(Fish, "1" = levels(Fish)[1:7], "2" = levels(Fish)[8:13])) %>% 
  ggplot(., aes_string(fill = "Behaviour", y = "time", x = "Fish"))+
  geom_bar(position = position_dodge(), stat="identity", color=grey(0.4))+
  scale_fill_manual(values = palette.beh,
                    labels = c("Swimming", "Resting", "Hovering", "Stereotypic swimming", "Nest building", "Foraging", "Interation with the walls"))+
  ylab("Time spent doing the behaviour (sec)")+
  facet_wrap(~group, scales = "free_x", ncol = 1)+
  theme(legend.position="top",
        strip.background = element_blank(),
        strip.text.x = element_blank()))
ggsave(plot.fish1, filename = "Plots/FigFish.png", width = 8.27, height = 6.27)
```

## plot by behaviour

```{r}
theme.new2 <- theme_classic()+ theme(
         axis.text.x = element_text(size = 12),
         axis.text.y = element_text(size = 10),
         axis.title.y = element_text(size = 12))

# recoding plot_var_fish function because of the name change to Large-Barren instead of Barren
plot_var_fish2 <- function(data, variable){
  levels(data$Tank) <- c(levels(data$Tank),'')
  means_tank <- aggregate(data[,variable], list(data[,"Tank"]), mean) %>% 
    setNames(.,c("Tank", variable))
  means_fish <- aggregate(data[,variable], list(data[,"Tank"],data[,"Fish"]), mean) %>% 
    setNames(.,c("Tank", "Fish", variable)) %>% 
    mutate(label = if_else(Tank == "Large-Barren", as.character(Fish), NA_character_))
  # No Barren data for Merlion
  means_fish <- within(means_fish, label[Tank == "Large" & Fish == "Merlion"] <- "Merlion") 

  ggplot(means_fish ,aes_string(y = variable, x = "Tank", color="Fish")) +
    geom_line(aes(group=Fish), lwd = 1.2) + 
    guides(color="none")+
    scale_color_manual(values=palette.fish)+
    geom_line(data = means_tank, aes(group=1), colour = "black", lwd = 2, linetype = "dashed")+
    geom_label_repel(aes(label = label), na.rm = TRUE, xlim = c(5,6), direction = "y", 
                     size = 3.5, fontface = "bold")+
    scale_x_discrete(drop=FALSE) 
}

(plot.lineA <- plot_var_fish2(data, "Swimming") +
   ylab("Time spent swimming (sec)")+
   ggtitle("A. Swimming")+
    theme(theme.new2))

(plot.lineB <- plot_var_fish2(data, "Resting") +
   ylab("Time spent resting (sec)")+
   ggtitle("B. Resting")+
    theme(theme.new2))

(plot.lineC <- plot_var_fish2(subset(data, Hovering >0), "Hovering") +
   ylab("Time spent hovering (sec)")+
   ggtitle("C. Hovering")+
    theme(theme.new2))

(plot.line<- ggarrange(plot.lineA,plot.lineB,plot.lineC, nrow = 2, ncol= 2))
ggsave(plot.line , filename = "Plots/FigFish2.png",width = 12, height = 12)
```

We tried the graph with rare behaviours such as Stereotypic swimming. But the results cannot be read as multiple individual lines were stacked at 0 (many fish never performed SS in any tank).

# plot Resting place

```{r}
(plotRPtank <- data_RP2 %>% 
   pivot_longer(names_to = "Resting.place", values_to = "Perc",
                cols = Floor.perc:filter.perc) %>%
   group_by(Tank, Resting.place) %>% 
   summarise(Perc = mean(Perc,na.rm =TRUE)) %>% 
   mutate(Resting.place = factor(Resting.place,
levels = c("Floor.perc","Plants.perc","Barrel.perc","filter.perc","Surface.perc"),
labels = c("Floor", "Plants (Furnish.)","Barrel (Furnish.)","Filter (Furnish.)","Water surface"))) %>% 
   ggplot(., aes(y = Perc, x = Tank,fill = Resting.place))+
   geom_bar(position = position_fill(reverse = TRUE), stat = "identity", color = "black")+
   scale_fill_manual(values=palette_RP)+
   guides(fill = guide_legend(reverse = TRUE)) +
   theme(legend.title = element_blank())+
   ylab("% of resting time")+
   scale_y_continuous(labels=c(0,25,50,75,100))+
   ggtitle("A"))

(plotRPfish <- data_RP2 %>% 
    pivot_longer(names_to = "Resting.place", values_to = "Perc",
                 cols = Floor.perc:filter.perc) %>%
    group_by(Fish, Resting.place) %>% 
    summarise(Perc = mean(Perc,na.rm =TRUE)) %>% 
    mutate(Resting.place = factor(Resting.place,
levels = c("Floor.perc","Plants.perc","Barrel.perc","filter.perc","Surface.perc"),
labels = c("Floor", "Plants (Furnish.)","Barrel (Furnish.)","Filter (Furnish.)","Water surface"))) %>% 
    ggplot(., aes(y = Perc, x = Fish,fill = Resting.place, width=.75))+
    geom_bar(position = position_fill(reverse = TRUE), stat = "identity", color = "black")+
    scale_fill_manual(values=palette_RP)+
    scale_y_continuous(labels=c(0,25,50,75,100)) +
    ylab("% of resting time")+
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
          axis.title.y = element_blank())+
    guides(fill = guide_legend(reverse = TRUE)) +
    ggtitle("B"))

(plotRP <- ggarrange(plotRPtank,plotRPfish, align = "h", widths = c(0.5, 1),
                     common.legend = TRUE, legend = "top", nrow = 1))
ggsave(plotRP, filename = "Plots/FigRP.png", width = 6.07, height = 4.22)
```
